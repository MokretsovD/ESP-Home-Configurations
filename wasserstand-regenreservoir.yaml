esphome:
  name: wasserstand-regenreservoir
  friendly_name: wasserstand-regenreservoir

esp8266:
  board: d1_mini

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: !secret wasserstand_regenreservoir_esp_api_encryption_key

ota:
  - platform: esphome
    password: !secret wasserstand_regenreservoir_esp_ota_password
    id: ota_esphome

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  manual_ip:
    static_ip: !secret wasserstand_regenreservoir_wifi_manual_ip_static_ip
    gateway: !secret wifi_manual_ip_gateway
    subnet: !secret wifi_manual_ip_subnet

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: !secret wasserstand_regenreservoir_wifi_ap_ssid
    password: !secret wasserstand_regenreservoir_wifi_ap_password

captive_portal:

# Example configuration entry
time:
  - platform: sntp
    id: sntp_time
    timezone: Europe/Berlin
    servers:
     - 192.168.8.1
    
# i2c Bus auf D1 und D2 konfigurieren
i2c:
  id: bus_a
  sda: D2
  scl: D1
  scan: True

# 1-Wire-Sensoren am Pin D4
#dallas:
#  - pin: D4

# ADC einrichten, ADDR-Pin ist auf VCC gelegt, daher Adresse 0x49
ads1115:
  - address: 0x49
    id: ads1115_49

# ADC Kanal A0 zur Messwerterfassung 
sensor:
  - platform: ads1115
    multiplexer: 'A0_GND'
    gain: 4.096
    name: "Wasserstand Regenreservoir"
    id: levelraw
    update_interval: 2s
    unit_of_measurement: cm
    accuracy_decimals: 1
    icon: "mdi:car-coolant-level"
# Messwerte glätten:
    filters:
      - sliding_window_moving_average:
          window_size: 20
          send_every: 20
# Spannungen nach Messreihe in Füllhöhe umrechnen          
      - calibrate_linear:
          - 0.16 -> 0.0
#          - 0.3 -> 20
#          - 0.69 -> 40
#          - 1.0 -> 60
#          - 1.35 -> 80
#          - 1.75 -> 100
#          - 2.03 -> 120
#          - 2.42 -> 140
#          - 2.7 -> 160
          - 3.29 -> 200          
# Füllmenge nach Füllstandskurve berechnen

  - platform: template
    name: "Volume Regenreservoir"
    lambda: |-
      return id(levelraw).state;
    
    filters:
      - calibrate_linear:
          - 4 -> 80
#          - 10 -> 200
#          - 12.5 -> 300
#          - 15 -> 400
#          - 17.5 -> 500
#          - 20 -> 600
#          - 25 -> 850
#          - 27.5 -> 1000
#          - 40 -> 1700
#          - 45 -> 2000
#          - 60 -> 3000
#          - 70 -> 3600
#          - 80 -> 4000
#          - 85 -> 4400
#          - 90 -> 4700
          - 95.5 -> 4980
    unit_of_measurement: l
    accuracy_decimals: 0

#    # 1-Wire Temperatursensor 

#  - platform: dallas
#    address: 0xef0516905a21ff28
#    name: "Zisterne Sens1"
#    unit_of_measurement: °C
#    accuracy_decimals: 1          